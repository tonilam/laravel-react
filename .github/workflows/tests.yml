name: Tests

on:
  push:
    branches:
      - master
      - '*.x'
  pull_request:
  # schedule:
  #   - cron: '0 0 * * *'

permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        php: [8.2]

    name: PHP ${{ matrix.php }}

    services:
      # mysql-service Label used to access the service container
      mysql:
        # Docker Hub image (also with version)
        image: mysql:5.7
        env:
          ## Accessing to Github secrets, where you can store your configuration
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel_react_test
        ## map the "external" 3306 port with the "internal" 3306
        ports:
          - 33306:3306
        # Set health checks to wait until mysql database has started (it takes some seconds to start)
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: none

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Copy environment file
        run: cp .env.example .env

      - name: Generate app key
        run: php artisan key:generate

      - name: Build frontend assets
        run: npm install --legacy-peer-deps
          npm run build

      - name: Execute migrations
        env:
          DB_PORT: 33306
          DB_DATABASE: laravel_react_test
          DB_USER: root
          DB_PASSWORD: password
        run: php artisan migrate

      - name: Execute tests
        env:
          DB_PORT: 33306
          DB_DATABASE: laravel_react_test
          DB_USER: root
          DB_PASSWORD: password
        run: vendor/bin/phpunit
